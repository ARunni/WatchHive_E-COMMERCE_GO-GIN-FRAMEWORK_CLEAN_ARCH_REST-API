definitions:
  models.AddressInfoResponse:
    properties:
      city:
        type: string
      house_name:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      pin:
        type: string
      state:
        type: string
      street:
        type: string
    required:
    - house_name
    - name
    - pin
    - state
    type: object
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    type: object
  models.ChangePassword:
    properties:
      confirm_password:
        type: string
      current_password:
        type: string
      id:
        type: integer
      new_password:
        type: string
    type: object
  models.UserDetails:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  models.UsersProfileDetails:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact:
    name: API Support
  description: TechDeck is an E-commerce platform to purchase and sell Electronic
    itmes
  title: Go + Gin E-Commerce API Watch Hive
  version: 1.0.0
paths:
  /admin/:
    post:
      consumes:
      - application/json
      description: Authenticate an admin and get access token
      parameters:
      - description: Admin credentials for login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Admin login successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or constraints not satisfied
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 'Unauthorized: cannot authenticate user'
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin login
      tags:
      - admin
  /admin/block:
    put:
      consumes:
      - application/json
      description: Blocks a user based on the provided ID
      parameters:
      - description: User ID to block
        format: uuid
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User blocked successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to block user
          schema:
            $ref: '#/definitions/response.Response'
      summary: Block a user
      tags:
      - admin
  /user/profile:
    get:
      consumes:
      - application/json
      description: Retrieves details of the user identified by ID
      parameters:
      - description: User ID
        format: int64
        in: header
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or unable to get user details
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve user details
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Updates user profile details based on provided information
      parameters:
      - description: User ID
        format: int64
        in: header
        name: id
        required: true
        type: integer
      - description: User profile details for update
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UsersProfileDetails'
      produces:
      - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or unable to update user profile
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update user profile
      tags:
      - users
  /user/profile/address:
    post:
      consumes:
      - application/json
      description: Adds an address for the user identified by ID
      parameters:
      - description: User ID
        format: int64
        in: header
        name: id
        required: true
        type: integer
      - description: Address details for addition
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AddressInfoResponse'
      produces:
      - application/json
      responses:
        "200":
          description: Address added successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or constraints not satisfied
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add user address
      tags:
      - user
  /user/profile/alladdress:
    get:
      consumes:
      - application/json
      description: Retrieves all addresses of the user identified by ID
      parameters:
      - description: User ID
        format: int64
        in: header
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: All user addresses retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or unable to get user addresses
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve all user addresses
      tags:
      - users
  /user/profile/password:
    patch:
      consumes:
      - application/json
      description: Changes the password for the user identified by ID
      parameters:
      - description: User ID
        format: int64
        in: header
        name: id
        required: true
        type: integer
      - description: Password details for change
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or unable to change password
          schema:
            $ref: '#/definitions/response.Response'
      summary: Change user password
      tags:
      - users
  /user/signup:
    post:
      consumes:
      - application/json
      description: Registers a new user with provided details
      parameters:
      - description: User details for sign-up
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "201":
          description: User signed up successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or constraints not satisfied
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register a new user
      tags:
      - user
securityDefinitions:
  BearerTokenAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
